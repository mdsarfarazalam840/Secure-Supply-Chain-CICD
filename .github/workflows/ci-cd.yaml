name: Secure Supply Chain CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build-scan-sign:
    runs-on: self-hosted
    outputs:
      image_uri: ${{ steps.push.outputs.digest }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/securesupplyshaincicd:${{ github.sha }} ./app

      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/securesupplyshaincicd:${{ github.sha }}
          format: 'table'
          exit-code: '0'
          severity: 'CRITICAL,HIGH'

      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh
          mkdir -p $HOME/.local/bin
          mv ./bin/syft $HOME/.local/bin/
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Generate SBOM
        run: syft ${{ secrets.DOCKER_USERNAME }}/securesupplyshaincicd:${{ github.sha }} -o json > sbom.json

      - name: Install Cosign
        run: |
          curl -sSfL https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64 -o cosign
          chmod +x cosign
          mv cosign $HOME/.local/bin/cosign
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Push Docker Image
        id: push
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/securesupplyshaincicd:${{ github.sha }}
          DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ secrets.DOCKER_USERNAME }}/securesupplyshaincicd:${{ github.sha }})
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT

      - name: Sign Docker Image
        run: cosign sign --yes --key env://COSIGN_KEY ${{ steps.push.outputs.digest }}
        env:
          COSIGN_KEY: ${{ secrets.COSIGN_KEY }}

  deploy:
    runs-on: self-hosted
    needs: build-scan-sign
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Ensure Minikube is running
        run: |
          minikube status || minikube start

      - name: Deploy manifests with dynamic image
        env:
          IMAGE_URI: ${{ needs.build-scan-sign.outputs.image_uri }}
        run: |
          envsubst < k8s/deployment.yaml | kubectl apply -f -
          kubectl apply -f k8s/service.yaml

      - name: Verify rollout
        run: kubectl rollout status deployment/secure-app
